package com.tibudget.dto;

import java.io.Serializable;
import java.util.Arrays;

public class MessageDto implements Serializable {

	public enum MessageType {
		INFO, ERROR, WARN, SUCCESS,
	}
	
	private final MessageType type;
	
	private final Object[] messageArguments;
	
	private final String messageKey;
	
	private final String fieldName;

	public MessageDto(MessageType type, String fieldName, String messageKey, Object... messageArguments) {
		super();
		this.type = type;
		this.fieldName = fieldName;
		this.messageKey = messageKey;
		this.messageArguments = messageArguments;
	}

	public MessageDto(MessageType type, String messageKey, Object... messageArguments) {
		this(type, null, messageKey, messageArguments);
	}

	public MessageDto(String messageKey, Object... messageArguments) {
		this(MessageType.ERROR, null, messageKey, messageArguments);
	}

	public MessageDto(String fieldName, String messageKey, Object... messageArguments) {
		this(MessageType.ERROR, fieldName, messageKey, messageArguments);
	}

	public MessageType getType() {
		return type;
	}

	public Object[] getMessageArguments() {
		return messageArguments;
	}

	public String getMessageKey() {
		return messageKey;
	}

	public String getFieldName() {
		return fieldName;
	}

	/**
	 * Autogenerated by eclipse IDE
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((fieldName == null) ? 0 : fieldName.hashCode());
		result = prime * result + Arrays.hashCode(messageArguments);
		result = prime * result + ((messageKey == null) ? 0 : messageKey.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		return result;
	}

	/**
	 * Autogenerated by eclipse IDE
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		MessageDto other = (MessageDto) obj;
		if (fieldName == null) {
			if (other.fieldName != null)
				return false;
		} else if (!fieldName.equals(other.fieldName))
			return false;
		if (!Arrays.equals(messageArguments, other.messageArguments))
			return false;
		if (messageKey == null) {
			if (other.messageKey != null)
				return false;
		} else if (!messageKey.equals(other.messageKey))
			return false;
		if (type != other.type)
			return false;
		return true;
	}
}
